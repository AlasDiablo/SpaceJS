{"version":3,"file":"space.min.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFV,EAAyBC,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,0DCLhD,MAAMR,EAAM,CAACS,EAAQC,SAA8BC,IAAXF,EAAwBA,EAASC,EAEnEE,EAAe,CAACC,EAAOC,KAChC,MAAMC,EAAmB,CAACC,EAAMC,IAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAKD,GAAQA,GAEhF,MAAO,CACHK,EAAGN,EAAiB,EAAGF,GACvBS,EAAGP,EAAiB,EAAGD,KCJ/B,MAAMS,EACFC,YAAYC,EAAKC,EAAMC,GACnBC,KAAKH,IAAMA,EACXG,KAAKF,KAAOA,EACZE,KAAKD,MAAQA,EAGjBE,OAAOC,GACHA,EAAIC,UAAY,QAAQH,KAAKD,MAAMK,QAAQJ,KAAKD,MAAMM,UAAUL,KAAKD,MAAMO,aAC3EJ,EAAIK,SAASP,KAAKH,IAAIJ,EAAGO,KAAKH,IAAIH,EAAGM,KAAKF,KAAME,KAAKF,OAI7D,MAAMU,EAAa,CAACC,EAAUZ,EAAKC,EAAMY,EAAOJ,EAAMF,KAElD,GAAIK,GAAYC,EAAMC,OAASF,GAAYC,EAAME,OAASF,EAAMG,OAAQ,CACpE,MAAMd,EAAQT,KAAKC,MAAuB,IAAhBD,KAAKE,SAAkB,GACjD,OAAO,IAAIG,EAAKE,EAAKC,EAAM,CAAEM,IAAKL,EAAOM,MAAON,EAAOO,KAAMP,IAIjE,GAAIU,GAAYH,EAAKK,OAASF,GAAYH,EAAKM,OAASN,EAAKO,OAAQ,CACjE,MAAMd,EAAQT,KAAKC,MAAuB,IAAhBD,KAAKE,SAAkB,GACjD,OAAO,IAAIG,EAAKE,EAAKC,EAAM,CAAEM,IAAK,EAAGC,MAAO,EAAGC,KAAMP,IAIzD,GAAIU,GAAYL,EAAIO,OAASF,GAAYL,EAAIQ,OAASR,EAAIS,OAAQ,CAC9D,MAAMd,EAAQT,KAAKC,MAAuB,IAAhBD,KAAKE,SAAkB,GACjD,OAAO,IAAIG,EAAKE,EAAKC,EAAM,CAAEM,IAAKL,EAAOM,MAAO,EAAGC,KAAM,MCPpD,EDyBO,CAACQ,EAAWC,GAC5BX,MAAKE,OAAMI,QAAOzB,QAAOC,SAAQY,QACjC,MACA,MAAMkB,EAAQ5C,EAAIgC,GAAK,GACjBa,EAAS7C,EAAIkC,GAAM,GACnBY,EAAU9C,EAAIsC,GAAO,GACrBS,EAAUC,SAASC,eAAeP,GAClCQ,EAAqBH,EAAQI,wBAC7BC,EAAUpD,EAAIa,EAAOqC,EAAmBrC,OACxCwC,EAAWrD,EAAIc,EAAQoC,EAAmBpC,QAC1CwC,EAAStD,EAAI0B,EAAM,GAEnB6B,EAASP,SAASQ,cAAc,UAChC1B,EAAMyB,EAAOE,WAAW,MAC9BF,EAAO1C,MAAQuC,EACfG,EAAOzC,OAASuC,EAEhB,MAAMK,EAAQ,GAERC,GAAiBP,EAAUC,GAAYC,EAAUX,EAEvD,IAAK,IAAIiB,EAAI,EAAGA,EAAID,EAAcC,GAAKN,EAAQ,CAC3C,MAAMO,EAAcf,EAAgB,GAAL,GACzBgB,EAAajB,EAAc,GAAJ,EAEvBkB,EAAqBF,EAAaC,GADtBlB,EAAa,GAAJ,GAErBoB,EAAgB9C,KAAKC,MAAOD,KAAKE,UAAY,GAAK2C,GAAuB,GACzEE,EAAO7B,EACT4B,EACApD,EAAawC,EAASC,GACtBC,EACA,CAAEf,MAAO,EAAGC,MAAO,GAAIC,OAAQG,GAC/B,CAAEL,MAAO,GAAKsB,EAAYrB,MAAO,GAAKqB,EAAYpB,OAAQI,GAC1D,CACIN,MAAO,GAAKsB,EAAaC,EACzBtB,MAAO,GAAKqB,EAAaC,EACzBrB,OAAQK,SAGHnC,IAATsD,GACAP,EAAMQ,KAAKD,GAInBnC,EAAIC,UAAY,QAChBD,EAAIK,SAAS,EAAG,EAAGiB,EAASC,GAE5BK,EAAMS,SAASF,GAASA,EAAKpC,OAAOC,KACpCiB,EAAQqB,MAAMC,gBAAkB,OAAOd,EAAOe,UAAU,kB","sources":["webpack://SpaceJS/webpack/bootstrap","webpack://SpaceJS/webpack/runtime/define property getters","webpack://SpaceJS/webpack/runtime/hasOwnProperty shorthand","webpack://SpaceJS/webpack/runtime/make namespace object","webpack://SpaceJS/./src/utils.js","webpack://SpaceJS/./src/stars.js","webpack://SpaceJS/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const get = (target, defaultValue) => ((target !== undefined) ? target : defaultValue);\n\nexport const getRandomPos = (width, height) => {\n    const getRandomInRange = (from, to) => Math.floor(Math.random() * (to - from) + from);\n\n    return {\n        x: getRandomInRange(0, width),\n        y: getRandomInRange(0, height),\n    };\n};\n","// eslint-disable-next-line import/named\nimport { get, getRandomPos } from './utils';\n\nclass Star {\n    constructor(pos, size, color) {\n        this.pos = pos;\n        this.size = size;\n        this.color = color;\n    }\n\n    render(ctx) {\n        ctx.fillStyle = `rgba(${this.color.red}, ${this.color.green}, ${this.color.blue}, ${0.7})`;\n        ctx.fillRect(this.pos.x, this.pos.y, this.size, this.size);\n    }\n}\n\nconst createStar = (selector, pos, size, white, blue, red) => {\n    // white\n    if (selector >= white.lower && selector <= white.upper && white.enable) {\n        const color = Math.floor((Math.random() * 255) + 1);\n        return new Star(pos, size, { red: color, green: color, blue: color });\n    }\n\n    // blue\n    if (selector >= blue.lower && selector <= blue.upper && blue.enable) {\n        const color = Math.floor((Math.random() * 255) + 1);\n        return new Star(pos, size, { red: 0, green: 0, blue: color });\n    }\n\n    // red\n    if (selector >= red.lower && selector <= red.upper && red.enable) {\n        const color = Math.floor((Math.random() * 255) + 1);\n        return new Star(pos, size, { red: color, green: 0, blue: 0 });\n    }\n\n    return undefined;\n};\n\n/**\n * Function use to create a background star on a specific html element\n * @param elementId{!string} Html element id who receive the background\n * @param density{!number} Density of star in the html element\n * @param red{?boolean} (Optional, default: true) Enable red star\n * @param blue{?boolean} (Optional, default: true) Enable blue star\n * @param white{?boolean} (Optional, default: true) Enable white star\n * @param width{?number} (Optional, default: html element width) Custom tile width\n * @param height{?number} (Optional, default: html element height) Custom tile height\n * @param size{?number} (Optional, default: 1) Star size in pixel\n * @returns {number|NodeJS.Timeout}\n */\nconst createStars = (elementId, density, {\n    red, blue, white, width, height, size,\n} = {}) => {\n    const redIn = get(red, true);\n    const blueIn = get(blue, true);\n    const whiteIn = get(white, true);\n    const element = document.getElementById(elementId);\n    const boundingClientRect = element.getBoundingClientRect();\n    const widthIn = get(width, boundingClientRect.width);\n    const heightIn = get(height, boundingClientRect.height);\n    const sizeIn = get(size, 1);\n\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = widthIn;\n    canvas.height = heightIn;\n\n    const stars = [];\n\n    const numberOfStar = ((widthIn + heightIn) / sizeIn) * density;\n\n    for (let i = 0; i < numberOfStar; i += sizeIn) {\n        const whiteMinus = !whiteIn ? -20 : 0;\n        const blueMinus = !blueIn ? -2 : 0;\n        const redMinus = !redIn ? -2 : 0;\n        const colorSelectorMinus = whiteMinus + blueMinus + redMinus;\n        const colorSelector = Math.floor((Math.random() * (24 + colorSelectorMinus)) + 1);\n        const star = createStar(\n            colorSelector,\n            getRandomPos(widthIn, heightIn),\n            sizeIn,\n            { lower: 1, upper: 20, enable: redIn },\n            { lower: 21 + whiteMinus, upper: 22 + whiteMinus, enable: blueIn },\n            {\n                lower: 23 + whiteMinus + blueMinus,\n                upper: 24 + whiteMinus + blueMinus,\n                enable: whiteIn,\n            },\n        );\n        if (star !== undefined) {\n            stars.push(star);\n        }\n    }\n\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, widthIn, heightIn);\n\n    stars.forEach((star) => star.render(ctx));\n    element.style.backgroundImage = `url(${canvas.toDataURL('image/png')})`;\n};\n\nexport default createStars;\n","// MIT License\n//\n// Copyright (c) 2021 AlasDiablo\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport createStarsMod from './stars';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const createStars = createStarsMod;\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","target","defaultValue","undefined","getRandomPos","width","height","getRandomInRange","from","to","Math","floor","random","x","y","Star","constructor","pos","size","color","this","render","ctx","fillStyle","red","green","blue","fillRect","createStar","selector","white","lower","upper","enable","elementId","density","redIn","blueIn","whiteIn","element","document","getElementById","boundingClientRect","getBoundingClientRect","widthIn","heightIn","sizeIn","canvas","createElement","getContext","stars","numberOfStar","i","whiteMinus","blueMinus","colorSelectorMinus","colorSelector","star","push","forEach","style","backgroundImage","toDataURL"],"sourceRoot":""}